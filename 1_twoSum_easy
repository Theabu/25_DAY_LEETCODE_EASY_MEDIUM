class Solution {
public:
	Solution(){}
	vector<int> twoSum(vector<int>& nums, int target) {
		// edge case 
		if(target==0) return {}; 
		if(nums.size() < 2 || target == 0)
		{
			return {} ;
		}
		unordered_map<int,int> mapping;
		int c;
		for(int i = 0 ; i < nums.size() ; i++)
		{
			c = target - nums[i];
			if(mapping.count(c))
			{
				return {mapping[c],i};
			}
			mapping[nums[i]] = i;
		}
		return {};  // Not found 
	}
};

//driver code
int main()
{
	Solution tc1 = new Solution();
	vector<int> ans = tc1.twoSum({1,4,21,3},9);
	cout << "{" << ans[0] << "," <<ans[1]<<"}" ;
}
	
